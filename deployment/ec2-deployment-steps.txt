On EC2 system:
--------------

sudo yum update
sudo yum install -y ruby19
sudo alternatives --set ruby /usr/bin/ruby1.9

sudo yum groupinstall -y 'Development Tools'
sudo yum groupinstall -y development-libs

sudo yum install -y libffi-devel
sudo yum install -y libyaml-devel 

sudo yum install -y gcc-c++ patch readline readline-devel zlib zlib-devel openssl-devel libxml2-devel libxslt-devel
sudo yum install -y libcurl-devel make bzip2 autoconf automake libtool bison iconv-devel
sudo yum install -y httpd-devel ruby-devel ruby19-devel apr-devel apr-util-devel mod_ssl

sudo gem install bundler
sudo gem install passenger

  <select ruby only>

sudo passenger-install-apache2-module

Added a file:

  /etc/sysconfig/iptables

With the following content:

  # Firewall configuration written by system-config-securitylevel
  # Manual customization of this file is not recommended.
  *filter
  :INPUT ACCEPT [0:0]
  :FORWARD ACCEPT [0:0]
  :OUTPUT ACCEPT [0:0]
  :RH-Firewall-1-INPUT - [0:0]
  -A INPUT -j RH-Firewall-1-INPUT
  -A FORWARD -j RH-Firewall-1-INPUT
  -A RH-Firewall-1-INPUT -i lo -j ACCEPT
  -A RH-Firewall-1-INPUT -p icmp --icmp-type any -j ACCEPT
  -A RH-Firewall-1-INPUT -p 50 -j ACCEPT
  -A RH-Firewall-1-INPUT -p 51 -j ACCEPT
  -A RH-Firewall-1-INPUT -p udp --dport 5353 -d 224.0.0.251 -j ACCEPT
  -A RH-Firewall-1-INPUT -p udp -m udp --dport 631 -j ACCEPT
  -A RH-Firewall-1-INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
  -A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --source 128.29.0.0/16 --dport 22 -j ACCEPT
  -A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --source 129.83.0.0/16 --dport 22 -j ACCEPT
  -A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --source 192.160.51.0/24 --dport 22 -j ACCEPT
  -A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --source 198.49.146.129 --dport 22 -j ACCEPT
  -A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --source 10.0.0.0/8 --dport 22 -j ACCEPT
  -A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --source 66.170.225.16 --dport 22 -j ACCEPT
  -A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
  -A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 443 -j ACCEPT
  #-A RH-Firewall-1-INPUT -j LOG --log-prefix "TCP packet dropped: "
  -A RH-Firewall-1-INPUT -j REJECT --reject-with icmp-host-prohibited
  COMMIT

sudo chown root.root /etc/sysconfig/iptables
sudo chmod 600 /etc/sysconfig/iptables
sudo /sbin/service iptables restart

Added a file:

  /etc/httpd/conf.d/mod_passenger.conf

With the following content (use output from passenger-install-apache2-module):

  LoadModule passenger_module /usr/local/share/gems1.9/gems/passenger-4.0.36/buildout/apache2/mod_passenger.so
  <IfModule mod_passenger.c>
    PassengerRoot /usr/local/share/gems1.9/gems/passenger-4.0.36
    PassengerDefaultRuby /usr/bin/ruby1.9
  </IfModule>

Added a file:

  /etc/httpd/sites-available/bonnie

With the following content:

  <VirtualHost *:80>
    # Redirect all non-ssl requests to ssl
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}
    ErrorLog /var/log/httpd/error.log
    LogLevel warn
    CustomLog /var/log/httpd/access.log combined
  </VirtualHost>

  LoadModule headers_module modules/mod_headers.so
  LoadModule expires_module modules/mod_expires.so

  LoadModule ssl_module modules/mod_ssl.so
  Listen 443
  SSLPassPhraseDialog  builtin
  SSLSessionCache         shmcb:/var/cache/mod_ssl/scache(512000)
  SSLSessionCacheTimeout  300
  SSLMutex default
  SSLRandomSeed startup file:/dev/urandom  256
  SSLRandomSeed connect builtin
  SSLCryptoDevice builtin

  <VirtualHost _default_:443>
    ErrorLog logs/ssl_error_log
    TransferLog logs/ssl_access_log
    LogLevel warn
    SSLEngine on
    SSLProtocol all -SSLv2
    SSLCipherSuite ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM:+LOW
    # Use self-signed SSL certificate for now
    SSLCertificateFile    /etc/httpd/ssl/self-signed-server.crt
    SSLCertificateKeyFile /etc/httpd/ssl/self-signed-server.key
    DocumentRoot /var/www/rails_apps/bonnie/current/public
    <Location /assets/>
      # Use of ETag is discouraged when Last-Modified is present
      Header unset ETag
      FileETag None
      # RFC says only cache for 1 year
      ExpiresActive On
      ExpiresDefault "access plus 1 year"
    </Location>
    <Directory /var/www/rails_apps/bonnie/current/public>
      AllowOverride all
      Options -MultiViews
      # Compress css and js
      AddOutputFilterByType DEFLATE text/css application/x-javascript application/javascript text/javascript
    </Directory>
    SetEnvIf User-Agent ".*MSIE.*" \
             nokeepalive ssl-unclean-shutdown \
             downgrade-1.0 force-response-1.0
  </VirtualHost>


sudo ln -s /etc/httpd/sites-available/bonnie /etc/httpd/sites-enabled/000-bonnie
sudo unlink /etc/httpd/sites-enabled/000-default

sudo rm conf.d/ssl.conf

sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/httpd/ssl/self-signed-server.key -out /etc/httpd/ssl/self-signed-server.crt

  <set the Common Name to be bonnie.tacomaproject.org>

sudo mkdir /var/www/rails_apps
sudo chown ec2-user.ec2-user /var/www/rails_apps

On development system in bonnie source directory:
-------------------------------------------------

bundle exec cap production deploy

Back on EC2 system:
-------------------

sudo /sbin/service httpd restart
