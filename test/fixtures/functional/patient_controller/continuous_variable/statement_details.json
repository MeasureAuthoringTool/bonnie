{"MedianTimefromEDArrivaltoEDDepartureforAdmittedEDPatients":{"SDE Ethnicity":"define \"SDE Ethnicity\":\n\t[\"Patient Characteristic Ethnicity\": \"Ethnicity\" ]","SDE Payer":"define \"SDE Payer\":\n\t[\"Patient Characteristic Payer\": \"Payer\" ]","SDE Race":"define \"SDE Race\":\n\t[\"Patient Characteristic Race\": \"Race\" ]","SDE Sex":"define \"SDE Sex\":\n\t[\"Patient Characteristic Sex\": \"ONC Administrative Sex\" ]","Inpatient Encounter":"define \"Inpatient Encounter\":\n\t[\"Encounter, Performed\": \"Encounter Inpatient\" ] Encounter\n\t\twhere Global.\"TotalLengthOfStay\"( Encounter.relevantPeriod ) <= 120\n\t\t\tand Encounter.relevantPeriod ends during \"Measurement Period\"","Initial Population":"define \"Initial Population\":\n\t\"Inpatient Encounter\" Encounter\n\t\twith [\"Encounter, Performed\": \"Emergency department patient visit (procedure)\" ] ED\n\t\t\tsuch that ED.relevantPeriod ends 1 hour or less before or on start of Encounter.relevantPeriod","Measure Population":"define \"Measure Population\":\n\t\"Initial Population\"","Measure Population Exclusion":"define \"Measure Population Exclusion\":\n\t\"Inpatient Encounter\" Encounter\n\t\twith [\"Encounter, Performed\": \"Emergency department patient visit (procedure)\" ] ED\n\t\t\tsuch that ED.relevantPeriod ends 1 hour or less before or on start of Encounter.relevantPeriod\n\t\t\t\tand ED.admissionSource in \"Hospital Settings\"","Stratum1":"define \"Stratum1\":\n\t\"Inpatient Encounter\" Encounter\n\t\twhere not ( Encounter.principalDiagnosis in \"Psychiatric/Mental Health Patient\" )","Stratum2":"define \"Stratum2\":\n\t\"Inpatient Encounter\" Encounter\n\t\twhere Encounter.principalDiagnosis in \"Psychiatric/Mental Health Patient\"","RelatedEDVisit":" define function \"RelatedEDVisit\"(Encounter \"Encounter, Performed\"):\n\tLast( [\"Encounter, Performed\": \"Emergency department patient visit (procedure)\" ] ED\n\t\t\twhere ED.relevantPeriod ends 1 hour or less before or on start of Encounter.relevantPeriod\n\t\t\tsort by start of relevantPeriod\n\t)","ArrivalAndDepartureTime":" define function \"ArrivalAndDepartureTime\"(Encounter \"Encounter, Performed\"):\n\tInterval[ First( Encounter.facilityLocations Location\n\t\t\treturn start of Location.locationPeriod\n\t\t\tsort ascending\n\t) , Last( Encounter.facilityLocations Location\n\t\t\treturn end of Location.locationPeriod\n\t\t\tsort ascending\n\t) ]","MeasureObservation":" define function \"MeasureObservation\"(Encounter \"Encounter, Performed\"):\n\tduration in minutes of \"ArrivalAndDepartureTime\"( \"RelatedEDVisit\"( Encounter ) )"},"MATGlobalCommonFunctions":{"ToDate":" define function \"ToDate\"(Value DateTime):\n\tDateTime( year from Value , month from Value , day from Value , 0, 0, 0, 0, timezone from Value )","CalendarAgeInYearsAt":" define function \"CalendarAgeInYearsAt\"(BirthDateTime DateTime , AsOf DateTime):\n\tyears between ToDate( BirthDateTime ) and ToDate( AsOf )","CalendarAgeInMonthsAt":" define function \"CalendarAgeInMonthsAt\"(BirthDateTime DateTime , AsOf DateTime):\n\tmonths between ToDate( BirthDateTime ) and ToDate( AsOf )","CalendarAgeInDaysAt":" define function \"CalendarAgeInDaysAt\"(BirthDateTime DateTime , AsOf DateTime):\n\tdays between ToDate( BirthDateTime ) and ToDate( AsOf )","CalendarAgeInYears":" define function \"CalendarAgeInYears\"(BirthDateTime DateTime):\n\tCalendarAgeInYearsAt( BirthDateTime , Today() )","CalendarAgeInMonths":" define function \"CalendarAgeInMonths\"(BirthDateTime DateTime):\n\tCalendarAgeInMonthsAt( BirthDateTime , Today() )","CalendarAgeInDays":" define function \"CalendarAgeInDays\"(BirthDateTime DateTime):\n\tCalendarAgeInDaysAt( BirthDateTime , Today() )","TotalLengthOfStay":" define function \"TotalLengthOfStay\"(Stay Interval< DateTime >):\n\tdifference in days between start of Stay and end of Stay","Hospitalization":" define function \"Hospitalization\"(Encounter \"Encounter, Performed\"):\n\t( singleton from ( [\"Encounter, Performed\": \"Emergency Department Visit\" ] EDVisit\n\t\t\twhere EDVisit.relevantPeriod ends 1 hour or less on or before start of Encounter.relevantPeriod\n\t) ) X\n\t\treturn if X is null then Encounter.relevantPeriod else Interval[ start of X.relevantPeriod , end of Encounter.relevantPeriod ]","LengthInDays":" define function \"LengthInDays\"(Value Interval< DateTime >):\n\tdifference in days between start of Value and end of Value"}}